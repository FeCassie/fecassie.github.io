name: "Build and Deploy"
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup GitHub Actions Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.gem
            .jekyll-cache
            _site
          key: ${{ runner.os }}-pages-${{ hashFiles('**/*.html', '**/*.md', '**/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-pages-

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3   # reads from a '.ruby-version' or '.tools-version' file if 'ruby-version' is omitted
          bundler-cache: true

      # Explicitly define the artifact version dependency
      - name: Setup Artifact Compatibility
        run: |
          echo "Setting up artifact compatibility"
          # This is just a placeholder step to ensure we control artifact versions

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          # Temporarily disable htmlproofer test
          # bundle exec htmlproofer _site --disable-external --check-html --allow_hash_href

      # Using the explicit artifact upload action with full namespace
      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: "_site${{ steps.pages.outputs.base_path }}"
          if-no-files-found: error
          retention-days: 1

      # Create pages artifact for the deployment
      - name: Create Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
